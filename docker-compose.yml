services:
  web-api:
    image: ${DOCKER_REGISTRY-}otlpsample
    build:
      context: .
      dockerfile: OTLPSample/Dockerfile
    depends_on:
    - otel-collector

  jaeger:
    image: jaegertracing/jaeger:2.0.0
    command:
      --set receivers.otlp.protocols.grpc.endpoint=0.0.0.0:4317
      --set receivers.otlp.protocols.http.endpoint=0.0.0.0:4318
    ports:
    - "16686:16686"     # UI
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./Configs/Observability/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317"     # gRPC
      - "4318:4318"     # HTTP
      - "13133:13133"   # health
    depends_on:
      - jaeger
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v3.6.0
    volumes:
      - ./Configs/Observability/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"     #UI

  grafana:
    image: grafana/grafana:12.2
    container_name: grafana
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123 
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    restart: unless-stopped